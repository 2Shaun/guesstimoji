stages:
    - analysis
    - setup
    - jestTest
    - build
    - deploy
    # - cypressTest

#include:
#    - template: Code-Quality.gitlab-ci.yml

.nodeImage: &nodeImage
    image: node:18.3.0-alpine3.16

.dockerHubDeployConfig: &dockerHubDeployConfig
    secrets:
        REGISTRY_USER:
            vault: docker_hub/registry_user@kv
            file: false
        REGISTRY_PASS:
            vault: docker_hub/registry_pass@kv
            file: false
    stage: deploy
    image: docker:20.10.16
    # service container
    services:
        - docker:20.10.16-dind
    variables:
        DOCKER_TLS_CERTDIR: '/certs'
    before_script:
        - docker login -u $REGISTRY_USER -p $REGISTRY_PASS

.dockerHubDeployScript: &dockerHubDeployScript
    - docker build -t $IMAGE_NAME:$CI_COMMIT_SHORT_SHA --build-arg env=prod -f ${DOCKERFILE_NAME-Dockerfile} .
    - docker tag $IMAGE_NAME:$CI_COMMIT_SHORT_SHA $IMAGE_NAME:latest
    - docker push --all-tags $IMAGE_NAME

#code_quality:
#    stage: analysis

installReactApp:
    stage: setup
    <<: *nodeImage
    script:
        - cd reactApp
        - yarn
    artifacts:
        expire_in: 15 mins
        paths:
            - reactApp/node_modules/

buildReactApp:
    stage: build
    <<: *nodeImage
    script:
        - cd reactApp
        - cat ./.env.prod
        - npm run build:prod
    dependencies:
        - 'installReactApp'
    artifacts:
        expire_in: 15 mins
        paths:
            - reactApp/build

installGameApi:
    stage: setup
    <<: *nodeImage
    script:
        - cd gameApi
        - npm i
    artifacts:
        expire_in: 15 mins
        paths:
            - gameApi/node_modules/

installGraphQlApi:
    stage: setup
    <<: *nodeImage
    script:
        - cd graphQlApi
        - npm i
    artifacts:
        expire_in: 15 mins
        paths:
            - graphQlApi/node_modules/

#jestTest:
#    stage: jestTest
#    <<: *nodeimage
#    script:
#        - cd reactApp
#        - npm t

deployReactAppImage:
    <<: *dockerHubDeployConfig
    variables:
        IMAGE_NAME: '$REGISTRY_USER/guesstimoji-react-app'
    script:
        - cd reactApp
        - *dockerHubDeployScript
    dependencies:
        - 'buildReactApp'

deployGameApiImage:
    <<: *dockerHubDeployConfig
    variables:
        IMAGE_NAME: '$REGISTRY_USER/guesstimoji-game-api'
    script:
        - cd gameApi
        - *dockerHubDeployScript
    dependencies:
        - 'installGameApi'

deployGraphQlApiImage:
    <<: *dockerHubDeployConfig
    variables:
        IMAGE_NAME: '$REGISTRY_USER/guesstimoji-graph-ql-api'
    script:
        - cd graphQlApi
        - *dockerHubDeployScript
    dependencies:
        - 'installGraphQlApi'

deployInitializeDbImage:
    <<: *dockerHubDeployConfig
    variables:
        IMAGE_NAME: '$REGISTRY_USER/guesstimoji-initialize-db'
        DOCKERFILE_NAME: mongosh.Dockerfile
    script:
        - cd graphQlApi
        - *dockerHubDeployScript
#e2eTests:
#    image: docker:19.03.12
#    variables:
#        DOCKER_TLS_CERTDIR: "/certs"
#    stage: cypressTest
#    services:
#        - docker:19.03.12-dind
#    before_script:
#        - apk update
#        - apk add py-pip musl-dev python3-dev libffi-dev openssl-dev gcc libc-dev rust cargo make
#        - pip install docker-compose
#    dependencies:
#        - build
#    services:
#        - docker:dind
#    script:
#       - docker-compose up --abort-on-container-exit --exit-code-from cypress
