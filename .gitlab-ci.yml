stages:
    - analysis
    - setup
    - jestTest
    - build
    - deploy
    # - cypressTest

#include:
#    - template: Code-Quality.gitlab-ci.yml

.nodeImage: &nodeImage
    image: node:18

.dockerRegistryCredentials: &dockerRegistryCredentials
    secrets:
        REGISTRY_USER:
            vault: docker_hub/registry_user@kv
            file: false
        REGISTRY_PASS:
            vault: docker_hub/registry_pass@kv
            file: false

#code_quality:
#    stage: analysis

installReactApp:
    stage: setup
    <<: *nodeImage
    script:
        - cd reactApp
        - yarn
    artifacts:
        expire_in: 15 mins
        paths:
            - reactApp/node_modules/

buildReactApp:
    stage: build
    <<: *nodeImage
    script:
        - cd reactApp
        - npm run build:prod
    artifacts:
        expire_in: 15 mins
        paths:
            - reactApp/build

#installGameApi:
#    stage: setup
#    <<: *nodeimage
#    script:
#        - cd gameApi
#        - npm i
#    artifacts:
#        expire_in: 15 mins
#        paths:
#            - gameApi/node_modules/

#installGraphQlApi:
#    stage: setup
#    <<: *nodeimage
#    script:
#        - cd graphQlApi
#        - npm i
#    artifacts:
#        expire_in: 15 mins
#        paths:
#            - graphQlApi/node_modules/

#jestTest:
#    stage: jestTest
#    <<: *nodeimage
#    script:
#        - cd reactApp
#        - npm t

build:
    stage: deploy
    <<: *dockerRegistryCredentials
    image: docker:20.10.16
    # service container
    services:
        - docker:20.10.16-dind
    variables:
        IMAGE_NAME: '$REGISTRY_USER/guesstimoji-react-app'
        IMAGE_TAG: '$CI_COMMIT_SHORT_SHA'
        DOCKER_TLS_CERTDIR: "/certs"
    script:
        - cd reactApp
        - docker build -t $IMAGE_NAME:$IMAGE_TAG .
        - docker login -u $REGISTRY_USER -p $REGISTRY_PASS
        - docker push $IMAGE_NAME:$IMAGE_TAG

#e2eTests:
#    image: docker:19.03.12
#    variables:
#        DOCKER_TLS_CERTDIR: "/certs"
#    stage: cypressTest
#    services:
#        - docker:19.03.12-dind
#    before_script:
#        - apk update
#        - apk add py-pip musl-dev python3-dev libffi-dev openssl-dev gcc libc-dev rust cargo make
#        - pip install docker-compose
#    dependencies:
#        - build
#    services:
#        - docker:dind
#    script:
#       - docker-compose up --abort-on-container-exit --exit-code-from cypress
