version: '2'

services:
    gameApi:
        # where the dockerfile is
        image: guesstimoji/game-api
        build: ./gameApi
        #expose:
        #        - 5000
        # ports (HOST:CONTAINER)
        # the application running inside is exposed at port CONTAINER
        #       this step seems to make expose redundant
        # map it through host server port HOST
        # can access with http://{host IP}:HOST
        ports:
            # Apple Airplay uses 5000
            - '5001:5000'

    graphQlApi:
        image: guesstimoji/graph-ql-api
        build: ./graphQlApi
        #expose:
        #        - 5000
        # ports (HOST:CONTAINER)
        # the application running inside is exposed at port CONTAINER
        #       this step seems to make expose redundant
        # map it through host server port HOST
        # can access with http://{host IP}:HOST
        depends_on:
            - mongo
        ports:
            - '3005:3005'

    mongo:
        image: mongo

    mongosh:
        image: guesstimoji/initialize-db
        build:
            context: ./graphQlApi
            dockerfile: mongosh.Dockerfile
        depends_on:
            - mongo
        command: mongosh --host mongo initializeDb.js

    reactApp:
        image: guesstimoji/react-app
        build: ./reactApp
        depends_on:
            - graphQlApi
            - mongo
            - gameApi
        ports:
            - '3000:80'
        command: [nginx, '-g', 'daemon off;']

    #cypress:
    #    image: guesstimoji/cypress
    #    build:
    #        context: .
    #        dockerfile: cypress.Dockerfile
    #    volumes:
    #        - ./cypress:/e2e
    #    depends_on:
    #        - graphQlApi
    #        - mongo
    #        - gameApi
    #        - reactApp
    #    command: [npx, 'cypress', 'run']
