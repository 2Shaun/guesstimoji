version: '2'

services:
    game-api:
        # where the dockerfile is
        image: guesstimoji-game-api
        build:
            context: ./gameApi
            args:
                - env=local
        #expose:
        #        - 5000
        # ports (HOST:CONTAINER)
        # the application running inside is exposed at port CONTAINER
        #       this step seems to make expose redundant
        # map it through host server port HOST
        # can access with http://{host IP}:HOST
        ports:
            - '5001:5001'
        labels:
            kompose.image-pull-policy: IfNotPresent

    graph-ql-api:
        image: guesstimoji-graph-ql-api
        build:
            context: ./graphQlApi
            args:
                - env=local
        #expose:
        #        - 5000
        # ports (HOST:CONTAINER)
        # the application running inside is exposed at port CONTAINER
        #       this step seems to make expose redundant
        # map it through host server port HOST
        # can access with http://{host IP}:HOST
        ports:
            - '3005:3005'
        labels:
            kompose.image-pull-policy: IfNotPresent

    react-app:
        image: guesstimoji-react-app
        build: ./reactApp
        depends_on:
            - graphQlApi
            - gameApi
        ports:
            - '80:80'
        command: [nginx, '-g', 'daemon off;']
        labels:
            kompose.image-pull-policy: IfNotPresent
            kompose.service.type: nodeport

    #cypress:
    #    image: guesstimoji/cypress
    #    build:
    #        context: .
    #        dockerfile: cypress.Dockerfile
    #    volumes:
    #        - ./cypress:/e2e
    #    depends_on:
    #        - graphQlApi
    #        - gameApi
    #        - reactApp
    #    command: [npx, 'cypress', 'run']
