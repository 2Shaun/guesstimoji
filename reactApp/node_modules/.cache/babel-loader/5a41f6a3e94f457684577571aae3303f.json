{"ast":null,"code":"var _jsxFileName = \"/home/tommy/guesstimoji/reactApp/src/game/OpponentBoard.js\";\nimport React, { useState } from 'react';\nimport OpponentSquare from './OpponentSquare';\nimport { connect } from 'react-redux';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst OpponentBoard = ({\n  socket,\n  board,\n  show\n}) => {\n  //const [freshBoard, setFreshBoard] = useState(easterEgg(props.room));\n  // it'll be way easier to have the second player submit the board I think,\n  // updating the board the other player has in Game\n  //socket.on(`setFreshBoard`, (newFreshBoard) => (setFreshBoard(newFreshBoard)));\n  const renderSquare = i => {\n    return /*#__PURE__*/_jsxDEV(OpponentSquare, {\n      index: i,\n      value: show[i] ? board[i] : '█'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 16\n    }, this);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    class: \"board\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"board-row\",\n      children: [renderSquare(28), renderSquare(29), renderSquare(30), renderSquare(31), renderSquare(32), renderSquare(33), renderSquare(34)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"board-row\",\n      children: [renderSquare(21), renderSquare(22), renderSquare(23), renderSquare(24), renderSquare(25), renderSquare(26), renderSquare(27)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"board-row\",\n      children: [renderSquare(14), renderSquare(15), renderSquare(16), renderSquare(17), renderSquare(18), renderSquare(19), renderSquare(20)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"board-row\",\n      children: [renderSquare(7), renderSquare(8), renderSquare(9), renderSquare(10), renderSquare(11), renderSquare(12), renderSquare(13)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"board-row\",\n      children: [renderSquare(0), renderSquare(1), renderSquare(2), renderSquare(3), renderSquare(4), renderSquare(5), renderSquare(6)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 9\n  }, this);\n};\n\n_c = OpponentBoard;\n\nconst mapStateToProps = state => ({\n  show: state.opponentBoard\n});\n\nexport default connect(mapStateToProps, null)(OpponentBoard);\n\nvar _c;\n\n$RefreshReg$(_c, \"OpponentBoard\");","map":{"version":3,"sources":["/home/tommy/guesstimoji/reactApp/src/game/OpponentBoard.js"],"names":["React","useState","OpponentSquare","connect","OpponentBoard","socket","board","show","renderSquare","i","mapStateToProps","state","opponentBoard"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,SAASC,OAAT,QAAwB,aAAxB;;;AACA,MAAMC,aAAa,GAAG,CAAC;AAAEC,EAAAA,MAAF;AAAUC,EAAAA,KAAV;AAAiBC,EAAAA;AAAjB,CAAD,KAA6B;AAC/C;AAEA;AACA;AACA;AAEA,QAAMC,YAAY,GAAIC,CAAD,IAAO;AACxB,wBAAO,QAAC,cAAD;AAAgB,MAAA,KAAK,EAAEA,CAAvB;AAA0B,MAAA,KAAK,EAAEF,IAAI,CAACE,CAAD,CAAJ,GAAUH,KAAK,CAACG,CAAD,CAAf,GAAqB;AAAtD;AAAA;AAAA;AAAA;AAAA,YAAP;AACH,GAFD;;AAGA,sBACI;AAAK,IAAA,KAAK,EAAC,OAAX;AAAA,4BACI;AAAK,MAAA,KAAK,EAAC,WAAX;AAAA,iBACKD,YAAY,CAAC,EAAD,CADjB,EAEKA,YAAY,CAAC,EAAD,CAFjB,EAGKA,YAAY,CAAC,EAAD,CAHjB,EAIKA,YAAY,CAAC,EAAD,CAJjB,EAKKA,YAAY,CAAC,EAAD,CALjB,EAMKA,YAAY,CAAC,EAAD,CANjB,EAOKA,YAAY,CAAC,EAAD,CAPjB;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAUI;AAAK,MAAA,KAAK,EAAC,WAAX;AAAA,iBACKA,YAAY,CAAC,EAAD,CADjB,EAEKA,YAAY,CAAC,EAAD,CAFjB,EAGKA,YAAY,CAAC,EAAD,CAHjB,EAIKA,YAAY,CAAC,EAAD,CAJjB,EAKKA,YAAY,CAAC,EAAD,CALjB,EAMKA,YAAY,CAAC,EAAD,CANjB,EAOKA,YAAY,CAAC,EAAD,CAPjB;AAAA;AAAA;AAAA;AAAA;AAAA,YAVJ,eAmBI;AAAK,MAAA,KAAK,EAAC,WAAX;AAAA,iBACKA,YAAY,CAAC,EAAD,CADjB,EAEKA,YAAY,CAAC,EAAD,CAFjB,EAGKA,YAAY,CAAC,EAAD,CAHjB,EAIKA,YAAY,CAAC,EAAD,CAJjB,EAKKA,YAAY,CAAC,EAAD,CALjB,EAMKA,YAAY,CAAC,EAAD,CANjB,EAOKA,YAAY,CAAC,EAAD,CAPjB;AAAA;AAAA;AAAA;AAAA;AAAA,YAnBJ,eA4BI;AAAK,MAAA,KAAK,EAAC,WAAX;AAAA,iBACKA,YAAY,CAAC,CAAD,CADjB,EAEKA,YAAY,CAAC,CAAD,CAFjB,EAGKA,YAAY,CAAC,CAAD,CAHjB,EAIKA,YAAY,CAAC,EAAD,CAJjB,EAKKA,YAAY,CAAC,EAAD,CALjB,EAMKA,YAAY,CAAC,EAAD,CANjB,EAOKA,YAAY,CAAC,EAAD,CAPjB;AAAA;AAAA;AAAA;AAAA;AAAA,YA5BJ,eAqCI;AAAK,MAAA,KAAK,EAAC,WAAX;AAAA,iBACKA,YAAY,CAAC,CAAD,CADjB,EAEKA,YAAY,CAAC,CAAD,CAFjB,EAGKA,YAAY,CAAC,CAAD,CAHjB,EAIKA,YAAY,CAAC,CAAD,CAJjB,EAKKA,YAAY,CAAC,CAAD,CALjB,EAMKA,YAAY,CAAC,CAAD,CANjB,EAOKA,YAAY,CAAC,CAAD,CAPjB;AAAA;AAAA;AAAA;AAAA;AAAA,YArCJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAiDH,CA3DD;;KAAMJ,a;;AA6DN,MAAMM,eAAe,GAAIC,KAAD,KAAY;AAChCJ,EAAAA,IAAI,EAAEI,KAAK,CAACC;AADoB,CAAZ,CAAxB;;AAIA,eAAeT,OAAO,CAACO,eAAD,EAAkB,IAAlB,CAAP,CAA+BN,aAA/B,CAAf","sourcesContent":["import React, { useState } from 'react';\nimport OpponentSquare from './OpponentSquare';\nimport { connect } from 'react-redux';\nconst OpponentBoard = ({ socket, board, show }) => {\n    //const [freshBoard, setFreshBoard] = useState(easterEgg(props.room));\n\n    // it'll be way easier to have the second player submit the board I think,\n    // updating the board the other player has in Game\n    //socket.on(`setFreshBoard`, (newFreshBoard) => (setFreshBoard(newFreshBoard)));\n\n    const renderSquare = (i) => {\n        return <OpponentSquare index={i} value={show[i] ? board[i] : '█'} />;\n    };\n    return (\n        <div class=\"board\">\n            <div class=\"board-row\">\n                {renderSquare(28)}\n                {renderSquare(29)}\n                {renderSquare(30)}\n                {renderSquare(31)}\n                {renderSquare(32)}\n                {renderSquare(33)}\n                {renderSquare(34)}\n            </div>\n            <div class=\"board-row\">\n                {renderSquare(21)}\n                {renderSquare(22)}\n                {renderSquare(23)}\n                {renderSquare(24)}\n                {renderSquare(25)}\n                {renderSquare(26)}\n                {renderSquare(27)}\n            </div>\n            <div class=\"board-row\">\n                {renderSquare(14)}\n                {renderSquare(15)}\n                {renderSquare(16)}\n                {renderSquare(17)}\n                {renderSquare(18)}\n                {renderSquare(19)}\n                {renderSquare(20)}\n            </div>\n            <div class=\"board-row\">\n                {renderSquare(7)}\n                {renderSquare(8)}\n                {renderSquare(9)}\n                {renderSquare(10)}\n                {renderSquare(11)}\n                {renderSquare(12)}\n                {renderSquare(13)}\n            </div>\n            <div class=\"board-row\">\n                {renderSquare(0)}\n                {renderSquare(1)}\n                {renderSquare(2)}\n                {renderSquare(3)}\n                {renderSquare(4)}\n                {renderSquare(5)}\n                {renderSquare(6)}\n            </div>\n        </div>\n    );\n};\n\nconst mapStateToProps = (state) => ({\n    show: state.opponentBoard,\n});\n\nexport default connect(mapStateToProps, null)(OpponentBoard);\n"]},"metadata":{},"sourceType":"module"}