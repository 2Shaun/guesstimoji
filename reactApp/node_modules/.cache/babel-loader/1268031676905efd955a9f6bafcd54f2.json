{"ast":null,"code":"// this reducer handles updates to id, board, and roomFull\n// roomFull will decide to render gamePage\n// id and board will be passed to gamePage\nfunction makeid(length) {\n  var result = '';\n  var characters = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n  var charactersLength = characters.length;\n\n  for (var i = 0; i < length; i++) {\n    result += characters.charAt(Math.floor(Math.random() * charactersLength));\n  }\n\n  return result;\n}\n\nexport const roomReducer = (state = {\n  roomID: makeid(5),\n  roomFull: false,\n  board: [],\n  randomSmiley: 'ðŸ˜Ž'\n}, action) => {\n  switch (action.type) {\n    case 'homePageLoaded':\n      return { ...state,\n        randomSmiley: action.payload\n      };\n\n    case 'room/roomJoined':\n      console.log('new state update game', { ...state,\n        ...action.payload\n      });\n      return { ...state,\n        ...action.payload\n      };\n\n    default:\n      return state;\n  }\n};\nexport const roomJoined = joinData => {\n  console.log('roomJoined -> joinData', joinData);\n  return {\n    type: 'room/roomJoined',\n    payload: joinData\n  };\n};\nexport const homePageLoaded = emoji => {\n  return {\n    type: 'homePageLoaded',\n    payload: emoji\n  };\n};","map":{"version":3,"sources":["/home/tommy/guesstimoji/reactApp/src/redux/roomSlice.js"],"names":["makeid","length","result","characters","charactersLength","i","charAt","Math","floor","random","roomReducer","state","roomID","roomFull","board","randomSmiley","action","type","payload","console","log","roomJoined","joinData","homePageLoaded","emoji"],"mappings":"AAAA;AACA;AACA;AACA,SAASA,MAAT,CAAgBC,MAAhB,EAAwB;AACpB,MAAIC,MAAM,GAAG,EAAb;AACA,MAAIC,UAAU,GACV,gEADJ;AAEA,MAAIC,gBAAgB,GAAGD,UAAU,CAACF,MAAlC;;AACA,OAAK,IAAII,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGJ,MAApB,EAA4BI,CAAC,EAA7B,EAAiC;AAC7BH,IAAAA,MAAM,IAAIC,UAAU,CAACG,MAAX,CACNC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgBL,gBAA3B,CADM,CAAV;AAGH;;AACD,SAAOF,MAAP;AACH;;AAED,OAAO,MAAMQ,WAAW,GAAG,CACvBC,KAAK,GAAG;AACJC,EAAAA,MAAM,EAAEZ,MAAM,CAAC,CAAD,CADV;AAEJa,EAAAA,QAAQ,EAAE,KAFN;AAGJC,EAAAA,KAAK,EAAE,EAHH;AAIJC,EAAAA,YAAY,EAAE;AAJV,CADe,EAOvBC,MAPuB,KAQtB;AACD,UAAQA,MAAM,CAACC,IAAf;AACI,SAAK,gBAAL;AACI,aAAO,EACH,GAAGN,KADA;AAEHI,QAAAA,YAAY,EAAEC,MAAM,CAACE;AAFlB,OAAP;;AAIJ,SAAK,iBAAL;AACIC,MAAAA,OAAO,CAACC,GAAR,CAAY,uBAAZ,EAAqC,EACjC,GAAGT,KAD8B;AAEjC,WAAGK,MAAM,CAACE;AAFuB,OAArC;AAIA,aAAO,EACH,GAAGP,KADA;AAEH,WAAGK,MAAM,CAACE;AAFP,OAAP;;AAIJ;AACI,aAAOP,KAAP;AAhBR;AAkBH,CA3BM;AA6BP,OAAO,MAAMU,UAAU,GAAIC,QAAD,IAAc;AACpCH,EAAAA,OAAO,CAACC,GAAR,CAAY,wBAAZ,EAAsCE,QAAtC;AACA,SAAO;AACHL,IAAAA,IAAI,EAAE,iBADH;AAEHC,IAAAA,OAAO,EAAEI;AAFN,GAAP;AAIH,CANM;AAQP,OAAO,MAAMC,cAAc,GAAIC,KAAD,IAAW;AACrC,SAAO;AACHP,IAAAA,IAAI,EAAE,gBADH;AAEHC,IAAAA,OAAO,EAAEM;AAFN,GAAP;AAIH,CALM","sourcesContent":["// this reducer handles updates to id, board, and roomFull\n// roomFull will decide to render gamePage\n// id and board will be passed to gamePage\nfunction makeid(length) {\n    var result = '';\n    var characters =\n        'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n    var charactersLength = characters.length;\n    for (var i = 0; i < length; i++) {\n        result += characters.charAt(\n            Math.floor(Math.random() * charactersLength)\n        );\n    }\n    return result;\n}\n\nexport const roomReducer = (\n    state = {\n        roomID: makeid(5),\n        roomFull: false,\n        board: [],\n        randomSmiley: 'ðŸ˜Ž',\n    },\n    action\n) => {\n    switch (action.type) {\n        case 'homePageLoaded':\n            return {\n                ...state,\n                randomSmiley: action.payload,\n            };\n        case 'room/roomJoined':\n            console.log('new state update game', {\n                ...state,\n                ...action.payload,\n            });\n            return {\n                ...state,\n                ...action.payload,\n            };\n        default:\n            return state;\n    }\n};\n\nexport const roomJoined = (joinData) => {\n    console.log('roomJoined -> joinData', joinData);\n    return {\n        type: 'room/roomJoined',\n        payload: joinData,\n    };\n};\n\nexport const homePageLoaded = (emoji) => {\n    return {\n        type: 'homePageLoaded',\n        payload: emoji,\n    };\n};\n"]},"metadata":{},"sourceType":"module"}