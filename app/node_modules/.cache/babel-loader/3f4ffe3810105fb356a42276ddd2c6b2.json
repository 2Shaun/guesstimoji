{"ast":null,"code":"import { createStore, combineReducers } from \"redux\";\nimport { roomReducer } from \"./roomSlice\";\nimport { gameLogReducer } from \"./gameLogSlice\";\nimport { opponentBoardReducer } from \"./opponentBoardSlice\";\nimport { playerReducer } from \"./playersSlice\";\nimport { boardsReducer } from \"./boardsSlice\";\nimport { roomsReducer } from \"./roomsSlice\"; // by default switch cases, combineReducers returns the state tree:\n// {gameLog: [...], app:{...}}\n\nconst rootReducer = combineReducers({\n  room: roomReducer,\n  gameLog: gameLogReducer,\n  opponentBoard: opponentBoardReducer,\n  player: playerReducer,\n  boards: boardsReducer,\n  rooms: roomsReducer\n});\nconst store = createStore(rootReducer, window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__());\nexport default store;","map":{"version":3,"sources":["C:/Users/tomwo_26b3mwb/source/repos/guesstimoji/app/src/redux/store.js"],"names":["createStore","combineReducers","roomReducer","gameLogReducer","opponentBoardReducer","playerReducer","boardsReducer","roomsReducer","rootReducer","room","gameLog","opponentBoard","player","boards","rooms","store","window","__REDUX_DEVTOOLS_EXTENSION__"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,QAA6C,OAA7C;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,cAAT,QAA+B,gBAA/B;AACA,SAASC,oBAAT,QAAqC,sBAArC;AACA,SAASC,aAAT,QAA8B,gBAA9B;AACA,SAASC,aAAT,QAA8B,eAA9B;AACA,SAASC,YAAT,QAA6B,cAA7B,C,CAEA;AACA;;AACA,MAAMC,WAAW,GAAGP,eAAe,CAAC;AAClCQ,EAAAA,IAAI,EAAEP,WAD4B;AAElCQ,EAAAA,OAAO,EAAEP,cAFyB;AAGlCQ,EAAAA,aAAa,EAAEP,oBAHmB;AAIlCQ,EAAAA,MAAM,EAAEP,aAJ0B;AAKlCQ,EAAAA,MAAM,EAAEP,aAL0B;AAMlCQ,EAAAA,KAAK,EAAEP;AAN2B,CAAD,CAAnC;AASA,MAAMQ,KAAK,GAAGf,WAAW,CACvBQ,WADuB,EAEvBQ,MAAM,CAACC,4BAAP,IAAuCD,MAAM,CAACC,4BAAP,EAFhB,CAAzB;AAKA,eAAeF,KAAf","sourcesContent":["import { createStore, combineReducers } from \"redux\";\nimport { roomReducer } from \"./roomSlice\";\nimport { gameLogReducer } from \"./gameLogSlice\";\nimport { opponentBoardReducer } from \"./opponentBoardSlice\";\nimport { playerReducer } from \"./playersSlice\";\nimport { boardsReducer } from \"./boardsSlice\";\nimport { roomsReducer } from \"./roomsSlice\";\n\n// by default switch cases, combineReducers returns the state tree:\n// {gameLog: [...], app:{...}}\nconst rootReducer = combineReducers({\n  room: roomReducer,\n  gameLog: gameLogReducer,\n  opponentBoard: opponentBoardReducer,\n  player: playerReducer,\n  boards: boardsReducer,\n  rooms: roomsReducer,\n});\n\nconst store = createStore(\n  rootReducer,\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n);\n\nexport default store;\n"]},"metadata":{},"sourceType":"module"}