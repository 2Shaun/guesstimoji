{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\tomwo_26b3mwb\\\\source\\\\repos\\\\guesstimoji\\\\app\\\\src\\\\HomePageDiv.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport Select from './Select';\nimport JoinRoomButton from './JoinRoomButton';\nimport { connect } from 'react-redux';\n\nconst HomePageDiv = ({\n  boards,\n  previews,\n  rooms,\n  handleJoin,\n  roomID,\n  socket\n}) => {\n  _s();\n\n  // the idea is to hold tempBoard and tempID in component state\n  // and hold the 'real' board and 'real' id in store\n  // store id and board will be updated on PLAY\n  // this allows me to not have to connect the home page\n  // to the store\n  const [tempBoard, setTempBoard] = useState(boards ? boards[0] : null);\n  const [tempRoomID, setTempRoomID] = useState(roomID);\n\n  const handleBoardClick = i => {\n    setTempBoard(boards[i]);\n  };\n\n  const handleRoomClick = i => {\n    // join room should not require board\n    handleJoin({\n      roomID: rooms[i],\n      board: []\n    });\n  };\n\n  const handleChange = e => {\n    setTempRoomID(e.target.value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    align: \"center\",\n    children: [\"Room ID:\", /*#__PURE__*/_jsxDEV(\"input\", {\n      value: tempRoomID,\n      onChange: handleChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(JoinRoomButton, {\n      roomID: tempRoomID,\n      board: tempBoard,\n      handleJoin: handleJoin\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(Select, {\n      header: 'Select Board',\n      selections: previews,\n      onClick: handleBoardClick,\n      emptyMessage: 'Waiting for boards fetch... âŒ›'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(Select, {\n      header: 'Join Room',\n      selections: rooms,\n      onClick: handleRoomClick,\n      emptyMessage: 'There are no rooms ðŸ¥º Make one or refresh!'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      id: \"board-select-button\",\n      onClick: () => socket.emit('client:rooms/roomsRequested'),\n      children: \"Refresh Rooms\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 3\n  }, this);\n};\n\n_s(HomePageDiv, \"g7Za6g8BJ1Cag4HJM5pL2kksFnA=\");\n\n_c = HomePageDiv;\n\nconst mapStateToProps = state => ({\n  boards: state.boards.boards,\n  previews: state.boards.previews,\n  rooms: state.rooms\n});\n\nexport default connect(mapStateToProps)(HomePageDiv);\n\nvar _c;\n\n$RefreshReg$(_c, \"HomePageDiv\");","map":{"version":3,"sources":["C:/Users/tomwo_26b3mwb/source/repos/guesstimoji/app/src/HomePageDiv.js"],"names":["React","useState","Select","JoinRoomButton","connect","HomePageDiv","boards","previews","rooms","handleJoin","roomID","socket","tempBoard","setTempBoard","tempRoomID","setTempRoomID","handleBoardClick","i","handleRoomClick","board","handleChange","e","target","value","emit","mapStateToProps","state"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,SAASC,OAAT,QAAwB,aAAxB;;AAEA,MAAMC,WAAW,GAAG,CAAC;AACpBC,EAAAA,MADoB;AAEpBC,EAAAA,QAFoB;AAGpBC,EAAAA,KAHoB;AAIpBC,EAAAA,UAJoB;AAKpBC,EAAAA,MALoB;AAMpBC,EAAAA;AANoB,CAAD,KAOd;AAAA;;AACL;AACA;AACA;AACA;AACA;AACA,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BZ,QAAQ,CAACK,MAAM,GAAGA,MAAM,CAAC,CAAD,CAAT,GAAe,IAAtB,CAA1C;AACA,QAAM,CAACQ,UAAD,EAAaC,aAAb,IAA8Bd,QAAQ,CAACS,MAAD,CAA5C;;AAEA,QAAMM,gBAAgB,GAAIC,CAAD,IAAO;AAC/BJ,IAAAA,YAAY,CAACP,MAAM,CAACW,CAAD,CAAP,CAAZ;AACA,GAFD;;AAIA,QAAMC,eAAe,GAAID,CAAD,IAAO;AAC9B;AACAR,IAAAA,UAAU,CAAC;AACVC,MAAAA,MAAM,EAAEF,KAAK,CAACS,CAAD,CADH;AAEVE,MAAAA,KAAK,EAAE;AAFG,KAAD,CAAV;AAIA,GAND;;AAQA,QAAMC,YAAY,GAAIC,CAAD,IAAO;AAC3BN,IAAAA,aAAa,CAACM,CAAC,CAACC,MAAF,CAASC,KAAV,CAAb;AACA,GAFD;;AAIA,sBACC;AAAK,IAAA,KAAK,EAAC,QAAX;AAAA,wCAEC;AAAO,MAAA,KAAK,EAAET,UAAd;AAA0B,MAAA,QAAQ,EAAEM;AAApC;AAAA;AAAA;AAAA;AAAA,YAFD,eAGC,QAAC,cAAD;AACC,MAAA,MAAM,EAAEN,UADT;AAEC,MAAA,KAAK,EAAEF,SAFR;AAGC,MAAA,UAAU,EAAEH;AAHb;AAAA;AAAA;AAAA;AAAA,YAHD,eAQC,QAAC,MAAD;AACC,MAAA,MAAM,EAAE,cADT;AAEC,MAAA,UAAU,EAAEF,QAFb;AAGC,MAAA,OAAO,EAAES,gBAHV;AAIC,MAAA,YAAY,EAAE;AAJf;AAAA;AAAA;AAAA;AAAA,YARD,eAcC,QAAC,MAAD;AACC,MAAA,MAAM,EAAE,WADT;AAEC,MAAA,UAAU,EAAER,KAFb;AAGC,MAAA,OAAO,EAAEU,eAHV;AAIC,MAAA,YAAY,EAAE;AAJf;AAAA;AAAA;AAAA;AAAA,YAdD,eAoBC;AACC,MAAA,EAAE,EAAC,qBADJ;AAEC,MAAA,OAAO,EAAE,MAAMP,MAAM,CAACa,IAAP,CAAY,6BAAZ,CAFhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YApBD;AAAA;AAAA;AAAA;AAAA;AAAA,UADD;AA6BA,CA7DD;;GAAMnB,W;;KAAAA,W;;AA+DN,MAAMoB,eAAe,GAAIC,KAAD,KAAY;AACnCpB,EAAAA,MAAM,EAAEoB,KAAK,CAACpB,MAAN,CAAaA,MADc;AAEnCC,EAAAA,QAAQ,EAAEmB,KAAK,CAACpB,MAAN,CAAaC,QAFY;AAGnCC,EAAAA,KAAK,EAAEkB,KAAK,CAAClB;AAHsB,CAAZ,CAAxB;;AAMA,eAAeJ,OAAO,CAACqB,eAAD,CAAP,CAAyBpB,WAAzB,CAAf","sourcesContent":["import React, { useState } from 'react';\nimport Select from './Select';\nimport JoinRoomButton from './JoinRoomButton';\nimport { connect } from 'react-redux';\n\nconst HomePageDiv = ({\n\tboards,\n\tpreviews,\n\trooms,\n\thandleJoin,\n\troomID,\n\tsocket,\n}) => {\n\t// the idea is to hold tempBoard and tempID in component state\n\t// and hold the 'real' board and 'real' id in store\n\t// store id and board will be updated on PLAY\n\t// this allows me to not have to connect the home page\n\t// to the store\n\tconst [tempBoard, setTempBoard] = useState(boards ? boards[0] : null);\n\tconst [tempRoomID, setTempRoomID] = useState(roomID);\n\n\tconst handleBoardClick = (i) => {\n\t\tsetTempBoard(boards[i]);\n\t};\n\n\tconst handleRoomClick = (i) => {\n\t\t// join room should not require board\n\t\thandleJoin({\n\t\t\troomID: rooms[i],\n\t\t\tboard: [],\n\t\t});\n\t};\n\n\tconst handleChange = (e) => {\n\t\tsetTempRoomID(e.target.value);\n\t};\n\n\treturn (\n\t\t<div align=\"center\">\n\t\t\tRoom ID:\n\t\t\t<input value={tempRoomID} onChange={handleChange} />\n\t\t\t<JoinRoomButton\n\t\t\t\troomID={tempRoomID}\n\t\t\t\tboard={tempBoard}\n\t\t\t\thandleJoin={handleJoin}\n\t\t\t/>\n\t\t\t<Select\n\t\t\t\theader={'Select Board'}\n\t\t\t\tselections={previews}\n\t\t\t\tonClick={handleBoardClick}\n\t\t\t\temptyMessage={'Waiting for boards fetch... âŒ›'}\n\t\t\t/>\n\t\t\t<Select\n\t\t\t\theader={'Join Room'}\n\t\t\t\tselections={rooms}\n\t\t\t\tonClick={handleRoomClick}\n\t\t\t\temptyMessage={'There are no rooms ðŸ¥º Make one or refresh!'}\n\t\t\t/>\n\t\t\t<button\n\t\t\t\tid=\"board-select-button\"\n\t\t\t\tonClick={() => socket.emit('client:rooms/roomsRequested')}\n\t\t\t>\n\t\t\t\tRefresh Rooms\n\t\t\t</button>\n\t\t</div>\n\t);\n};\n\nconst mapStateToProps = (state) => ({\n\tboards: state.boards.boards,\n\tpreviews: state.boards.previews,\n\trooms: state.rooms,\n});\n\nexport default connect(mapStateToProps)(HomePageDiv);\n"]},"metadata":{},"sourceType":"module"}