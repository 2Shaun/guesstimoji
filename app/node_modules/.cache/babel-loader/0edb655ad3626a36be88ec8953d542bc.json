{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\tomwo_26b3mwb\\\\source\\\\repos\\\\guesstimoji\\\\src\\\\game\\\\OpponentBoard.js\";\nimport React, { useState } from \"react\";\nimport OpponentSquare from \"./OpponentSquare\";\nimport { connect } from \"react-redux\";\n\nconst OpponentBoard = ({\n  socket,\n  board,\n  show\n}) => {\n  //const [freshBoard, setFreshBoard] = useState(easterEgg(props.room));\n  // it'll be way easier to have the second player submit the board I think,\n  // updating the board the other player has in Game\n  //socket.on(`setFreshBoard`, (newFreshBoard) => (setFreshBoard(newFreshBoard)));\n  const renderSquare = i => {\n    return /*#__PURE__*/_jsxDEV(OpponentSquare, {\n      index: i,\n      value: show[i] ? board[i] : \"█\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 12\n    }, this);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    class: \"board\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"board-row\",\n      children: [renderSquare(28), renderSquare(29), renderSquare(30), renderSquare(31), renderSquare(32), renderSquare(33), renderSquare(34)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"board-row\",\n      children: [renderSquare(21), renderSquare(22), renderSquare(23), renderSquare(24), renderSquare(25), renderSquare(26), renderSquare(27)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"board-row\",\n      children: [renderSquare(14), renderSquare(15), renderSquare(16), renderSquare(17), renderSquare(18), renderSquare(19), renderSquare(20)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"board-row\",\n      children: [renderSquare(7), renderSquare(8), renderSquare(9), renderSquare(10), renderSquare(11), renderSquare(12), renderSquare(13)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"board-row\",\n      children: [renderSquare(0), renderSquare(1), renderSquare(2), renderSquare(3), renderSquare(4), renderSquare(5), renderSquare(6)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this);\n};\n\n_c = OpponentBoard;\n\nconst mapStateToProps = state => ({\n  show: state.opponentBoard\n});\n\nexport default connect(mapStateToProps, null)(OpponentBoard);\n\nvar _c;\n\n$RefreshReg$(_c, \"OpponentBoard\");","map":{"version":3,"sources":["C:/Users/tomwo_26b3mwb/source/repos/guesstimoji/src/game/OpponentBoard.js"],"names":["React","useState","OpponentSquare","connect","OpponentBoard","socket","board","show","renderSquare","i","mapStateToProps","state","opponentBoard"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,SAASC,OAAT,QAAwB,aAAxB;;AACA,MAAMC,aAAa,GAAG,CAAC;AAAEC,EAAAA,MAAF;AAAUC,EAAAA,KAAV;AAAiBC,EAAAA;AAAjB,CAAD,KAA6B;AACjD;AAEA;AACA;AACA;AAEA,QAAMC,YAAY,GAAIC,CAAD,IAAO;AAC1B,wBAAO,QAAC,cAAD;AAAgB,MAAA,KAAK,EAAEA,CAAvB;AAA0B,MAAA,KAAK,EAAEF,IAAI,CAACE,CAAD,CAAJ,GAAUH,KAAK,CAACG,CAAD,CAAf,GAAqB;AAAtD;AAAA;AAAA;AAAA;AAAA,YAAP;AACD,GAFD;;AAGA,sBACE;AAAK,IAAA,KAAK,EAAC,OAAX;AAAA,4BACE;AAAK,MAAA,KAAK,EAAC,WAAX;AAAA,iBACGD,YAAY,CAAC,EAAD,CADf,EAEGA,YAAY,CAAC,EAAD,CAFf,EAGGA,YAAY,CAAC,EAAD,CAHf,EAIGA,YAAY,CAAC,EAAD,CAJf,EAKGA,YAAY,CAAC,EAAD,CALf,EAMGA,YAAY,CAAC,EAAD,CANf,EAOGA,YAAY,CAAC,EAAD,CAPf;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAUE;AAAK,MAAA,KAAK,EAAC,WAAX;AAAA,iBACGA,YAAY,CAAC,EAAD,CADf,EAEGA,YAAY,CAAC,EAAD,CAFf,EAGGA,YAAY,CAAC,EAAD,CAHf,EAIGA,YAAY,CAAC,EAAD,CAJf,EAKGA,YAAY,CAAC,EAAD,CALf,EAMGA,YAAY,CAAC,EAAD,CANf,EAOGA,YAAY,CAAC,EAAD,CAPf;AAAA;AAAA;AAAA;AAAA;AAAA,YAVF,eAmBE;AAAK,MAAA,KAAK,EAAC,WAAX;AAAA,iBACGA,YAAY,CAAC,EAAD,CADf,EAEGA,YAAY,CAAC,EAAD,CAFf,EAGGA,YAAY,CAAC,EAAD,CAHf,EAIGA,YAAY,CAAC,EAAD,CAJf,EAKGA,YAAY,CAAC,EAAD,CALf,EAMGA,YAAY,CAAC,EAAD,CANf,EAOGA,YAAY,CAAC,EAAD,CAPf;AAAA;AAAA;AAAA;AAAA;AAAA,YAnBF,eA4BE;AAAK,MAAA,KAAK,EAAC,WAAX;AAAA,iBACGA,YAAY,CAAC,CAAD,CADf,EAEGA,YAAY,CAAC,CAAD,CAFf,EAGGA,YAAY,CAAC,CAAD,CAHf,EAIGA,YAAY,CAAC,EAAD,CAJf,EAKGA,YAAY,CAAC,EAAD,CALf,EAMGA,YAAY,CAAC,EAAD,CANf,EAOGA,YAAY,CAAC,EAAD,CAPf;AAAA;AAAA;AAAA;AAAA;AAAA,YA5BF,eAqCE;AAAK,MAAA,KAAK,EAAC,WAAX;AAAA,iBACGA,YAAY,CAAC,CAAD,CADf,EAEGA,YAAY,CAAC,CAAD,CAFf,EAGGA,YAAY,CAAC,CAAD,CAHf,EAIGA,YAAY,CAAC,CAAD,CAJf,EAKGA,YAAY,CAAC,CAAD,CALf,EAMGA,YAAY,CAAC,CAAD,CANf,EAOGA,YAAY,CAAC,CAAD,CAPf;AAAA;AAAA;AAAA;AAAA;AAAA,YArCF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAiDD,CA3DD;;KAAMJ,a;;AA6DN,MAAMM,eAAe,GAAIC,KAAD,KAAY;AAClCJ,EAAAA,IAAI,EAAEI,KAAK,CAACC;AADsB,CAAZ,CAAxB;;AAIA,eAAeT,OAAO,CAACO,eAAD,EAAkB,IAAlB,CAAP,CAA+BN,aAA/B,CAAf","sourcesContent":["import React, { useState } from \"react\";\r\nimport OpponentSquare from \"./OpponentSquare\";\r\nimport { connect } from \"react-redux\";\r\nconst OpponentBoard = ({ socket, board, show }) => {\r\n  //const [freshBoard, setFreshBoard] = useState(easterEgg(props.room));\r\n\r\n  // it'll be way easier to have the second player submit the board I think,\r\n  // updating the board the other player has in Game\r\n  //socket.on(`setFreshBoard`, (newFreshBoard) => (setFreshBoard(newFreshBoard)));\r\n\r\n  const renderSquare = (i) => {\r\n    return <OpponentSquare index={i} value={show[i] ? board[i] : \"█\"} />;\r\n  };\r\n  return (\r\n    <div class=\"board\">\r\n      <div class=\"board-row\">\r\n        {renderSquare(28)}\r\n        {renderSquare(29)}\r\n        {renderSquare(30)}\r\n        {renderSquare(31)}\r\n        {renderSquare(32)}\r\n        {renderSquare(33)}\r\n        {renderSquare(34)}\r\n      </div>\r\n      <div class=\"board-row\">\r\n        {renderSquare(21)}\r\n        {renderSquare(22)}\r\n        {renderSquare(23)}\r\n        {renderSquare(24)}\r\n        {renderSquare(25)}\r\n        {renderSquare(26)}\r\n        {renderSquare(27)}\r\n      </div>\r\n      <div class=\"board-row\">\r\n        {renderSquare(14)}\r\n        {renderSquare(15)}\r\n        {renderSquare(16)}\r\n        {renderSquare(17)}\r\n        {renderSquare(18)}\r\n        {renderSquare(19)}\r\n        {renderSquare(20)}\r\n      </div>\r\n      <div class=\"board-row\">\r\n        {renderSquare(7)}\r\n        {renderSquare(8)}\r\n        {renderSquare(9)}\r\n        {renderSquare(10)}\r\n        {renderSquare(11)}\r\n        {renderSquare(12)}\r\n        {renderSquare(13)}\r\n      </div>\r\n      <div class=\"board-row\">\r\n        {renderSquare(0)}\r\n        {renderSquare(1)}\r\n        {renderSquare(2)}\r\n        {renderSquare(3)}\r\n        {renderSquare(4)}\r\n        {renderSquare(5)}\r\n        {renderSquare(6)}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  show: state.opponentBoard,\r\n});\r\n\r\nexport default connect(mapStateToProps, null)(OpponentBoard);\r\n"]},"metadata":{},"sourceType":"module"}