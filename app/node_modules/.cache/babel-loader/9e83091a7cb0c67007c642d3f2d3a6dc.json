{"ast":null,"code":"// this reducer handles updates to id, board, and roomFull\n// roomFull will decide to render gamePage\n// id and board will be passed to gamePage\nfunction makeid(length) {\n  var result = \"\";\n  var characters = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\n  var charactersLength = characters.length;\n\n  for (var i = 0; i < length; i++) {\n    result += characters.charAt(Math.floor(Math.random() * charactersLength));\n  }\n\n  return result;\n}\n\nexport const roomReducer = (state = {\n  roomID: makeid(5),\n  roomFull: false,\n  board: [],\n  randomSmiley: \"ðŸ˜Ž\"\n}, action) => {\n  switch (action.type) {\n    case \"homePageLoaded\":\n      return { ...state,\n        randomSmiley: action.payload\n      };\n\n    case \"room/roomJoined\":\n      console.log(\"new state update game\", { ...state,\n        ...action.payload\n      });\n      return { ...state,\n        ...action.payload\n      };\n\n    default:\n      return state;\n  }\n};\nexport const roomJoined = joinData => {\n  console.log(\"roomJoined -> joinData\", joinData);\n  return {\n    type: \"room/roomJoined\",\n    payload: joinData\n  };\n};\nexport const homePageLoaded = emoji => {\n  return {\n    type: \"homePageLoaded\",\n    payload: emoji\n  };\n};","map":{"version":3,"sources":["C:/Users/tomwo_26b3mwb/source/repos/guesstimoji/app/src/redux/roomSlice.js"],"names":["makeid","length","result","characters","charactersLength","i","charAt","Math","floor","random","roomReducer","state","roomID","roomFull","board","randomSmiley","action","type","payload","console","log","roomJoined","joinData","homePageLoaded","emoji"],"mappings":"AAAA;AACA;AACA;AACA,SAASA,MAAT,CAAgBC,MAAhB,EAAwB;AACtB,MAAIC,MAAM,GAAG,EAAb;AACA,MAAIC,UAAU,GACZ,gEADF;AAEA,MAAIC,gBAAgB,GAAGD,UAAU,CAACF,MAAlC;;AACA,OAAK,IAAII,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGJ,MAApB,EAA4BI,CAAC,EAA7B,EAAiC;AAC/BH,IAAAA,MAAM,IAAIC,UAAU,CAACG,MAAX,CAAkBC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgBL,gBAA3B,CAAlB,CAAV;AACD;;AACD,SAAOF,MAAP;AACD;;AAED,OAAO,MAAMQ,WAAW,GAAG,CACzBC,KAAK,GAAG;AACNC,EAAAA,MAAM,EAAEZ,MAAM,CAAC,CAAD,CADR;AAENa,EAAAA,QAAQ,EAAE,KAFJ;AAGNC,EAAAA,KAAK,EAAE,EAHD;AAINC,EAAAA,YAAY,EAAE;AAJR,CADiB,EAOzBC,MAPyB,KAQtB;AACH,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,gBAAL;AACE,aAAO,EACL,GAAGN,KADE;AAELI,QAAAA,YAAY,EAAEC,MAAM,CAACE;AAFhB,OAAP;;AAIF,SAAK,iBAAL;AACEC,MAAAA,OAAO,CAACC,GAAR,CAAY,uBAAZ,EAAqC,EAAE,GAAGT,KAAL;AAAY,WAAGK,MAAM,CAACE;AAAtB,OAArC;AACA,aAAO,EACL,GAAGP,KADE;AAEL,WAAGK,MAAM,CAACE;AAFL,OAAP;;AAIF;AACE,aAAOP,KAAP;AAbJ;AAeD,CAxBM;AA0BP,OAAO,MAAMU,UAAU,GAAIC,QAAD,IAAc;AACtCH,EAAAA,OAAO,CAACC,GAAR,CAAY,wBAAZ,EAAsCE,QAAtC;AACA,SAAO;AACLL,IAAAA,IAAI,EAAE,iBADD;AAELC,IAAAA,OAAO,EAAEI;AAFJ,GAAP;AAID,CANM;AAQP,OAAO,MAAMC,cAAc,GAAIC,KAAD,IAAW;AACvC,SAAO;AACLP,IAAAA,IAAI,EAAE,gBADD;AAELC,IAAAA,OAAO,EAAEM;AAFJ,GAAP;AAID,CALM","sourcesContent":["// this reducer handles updates to id, board, and roomFull\r\n// roomFull will decide to render gamePage\r\n// id and board will be passed to gamePage\r\nfunction makeid(length) {\r\n  var result = \"\";\r\n  var characters =\r\n    \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\r\n  var charactersLength = characters.length;\r\n  for (var i = 0; i < length; i++) {\r\n    result += characters.charAt(Math.floor(Math.random() * charactersLength));\r\n  }\r\n  return result;\r\n}\r\n\r\nexport const roomReducer = (\r\n  state = {\r\n    roomID: makeid(5),\r\n    roomFull: false,\r\n    board: [],\r\n    randomSmiley: \"ðŸ˜Ž\"\r\n  },\r\n  action\r\n) => {\r\n  switch (action.type) {\r\n    case \"homePageLoaded\":\r\n      return {\r\n        ...state,\r\n        randomSmiley: action.payload,\r\n      }\r\n    case \"room/roomJoined\":\r\n      console.log(\"new state update game\", { ...state, ...action.payload });\r\n      return {\r\n        ...state,\r\n        ...action.payload,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const roomJoined = (joinData) => {\r\n  console.log(\"roomJoined -> joinData\", joinData);\r\n  return {\r\n    type: \"room/roomJoined\",\r\n    payload: joinData,\r\n  };\r\n};\r\n\r\nexport const homePageLoaded = (emoji) => {\r\n  return {\r\n    type: \"homePageLoaded\",\r\n    payload: emoji,\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}